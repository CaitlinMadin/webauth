(function(funcName, baseObj) {
  "use strict";
  // The public function name defaults to window.docReady
  // but you can modify the last line of this function to pass in a different object or method name
  // if you want to put them in a different namespace and those will be used instead of
  // window.docReady(...)
  funcName = funcName || "docReady";
  baseObj = baseObj || window;
  var readyList = [];
  var readyFired = false;
  var readyEventHandlersInstalled = false;

  // call this when the document is ready
  // this function protects itself against being called more than once
  function ready() {
      if (!readyFired) {
          // this must be set to true before we start calling callbacks
          readyFired = true;
          for (var i = 0; i < readyList.length; i++) {
              // if a callback here happens to add new ready handlers,
              // the docReady() function will see that it already fired
              // and will schedule the callback to run right after
              // this event loop finishes so all handlers will still execute
              // in order and no new ones will be added to the readyList
              // while we are processing the list
              readyList[i].fn.call(window, readyList[i].ctx);
          }
          // allow any closures held by these functions to free
          readyList = [];
      }
  }

  function readyStateChange() {
      if ( document.readyState === "complete" ) {
          ready();
      }
  }

  // This is the one public interface
  // docReady(fn, context);
  // the context argument is optional - if present, it will be passed
  // as an argument to the callback
  baseObj[funcName] = function(callback, context) {
      if (typeof callback !== "function") {
          throw new TypeError("callback for docReady(fn) must be a function");
      }
      // if ready has already fired, then just schedule the callback
      // to fire asynchronously, but right away
      if (readyFired) {
          setTimeout(function() {callback(context);}, 1);
          return;
      } else {
          // add the function and context to the list
          readyList.push({fn: callback, ctx: context});
      }
      // if document already ready to go, schedule the ready function to run
      // IE only safe when readyState is "complete", others safe when readyState is "interactive"
      if (document.readyState === "complete" || (!document.attachEvent && document.readyState === "interactive")) {
          setTimeout(ready, 1);
      } else if (!readyEventHandlersInstalled) {
          // otherwise if we don't have event handlers installed, install them
          if (document.addEventListener) {
              // first choice is DOMContentLoaded event
              document.addEventListener("DOMContentLoaded", ready, false);
              // backup is window load event
              window.addEventListener("load", ready, false);
          } else {
              // must be IE
              document.attachEvent("onreadystatechange", readyStateChange);
              window.attachEvent("onload", ready);
          }
          readyEventHandlersInstalled = true;
      }
  }
})("docReady", window);
// modify this previous line to pass in your own method name
// and object for the method to be attached to


window.docReady(function () {
    (function () {
        pixels = [];
        pixels.push('<img src="https://analytics.twitter.com/i/adsct?p_id=18ce542xh3g&p_user_id=337eb5d4-35bc-464c-b16b-845ab012f1f2" width="1" height="1" style="display:none;" />');
        pixels.push('<img src="https://secure.adnxs.com/getuid?https://ids.ad.gt/api/v1/match?id=337eb5d4-35bc-464c-b16b-845ab012f1f2&adnxs_id=$UID" width="1" height="1" style="display:none;"/>');
        pixels.push('<img src="https://match.adsrvr.org/track/cmf/generic?ttd_pid=8gkxb6n&ttd_tpi=1&ttd_puid=337eb5d4-35bc-464c-b16b-845ab012f1f2" width="1" height="1" style="display:none;"/>');
        pixels.push('<img src="https://cm.g.doubleclick.net/pixel?google_nid=audigent_w_appnexus_3985&google_cm&google_sc&google_ula=450542624&id=337eb5d4-35bc-464c-b16b-845ab012f1f2" width="1" height="1" style="display:none;"/>');
        pixels.forEach(function (pixel) {
            var div = document.createElement("div");
            div.innerHTML = pixel;
            var r = div.content ? div.content.firstChild : div.firstChild;
            document.body.appendChild(r);
        })
    })();

    function preloadSupported() {
        var link = document.createElement('link');
        var relList = link.relList;
        if (!relList || !relList.supports) {
            return false;
        }
        return relList.supports('preload');
    };

    if (preloadSupported()) {
        var link = document.createElement('link');
        link.href = 'https://tags.bkrtx.com/js/bk-coretag.js';
        link.rel = 'preload';
        link.as = 'script';
        document.head.appendChild(link);
    }

    (function (w, d, t, u) {
        var a = d.createElement(t);
        a.async = false;
        a.src = u;
        var s = d.getElementsByTagName(t)[0];
        s.parentNode.insertBefore(a, s);
    })(window, document, 'script', 'https://p.ad.gt/api/v1/p/passive/3955350d7fbbf3b0af4d2ea2bf5b6a4c/337eb5d4-35bc-464c-b16b-845ab012f1f2');
});